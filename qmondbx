#!/bin/bash
#
# 11/05/18 Added command line options -d (once a day), -h (once an hour) and -m (once a month) data export of cdb data.
#
PID=$$
FILES=""
HEADER=""
CTR=0
OPT=$1
Month=$2
Year=$3
SourceFile=$4
DAYS="01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31"
HOURS="00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 51 16 17 18 19 20 21 22 23"

qmon() {
	#
	FILE="cat $SourceFile"
	$FILE | \
	while IFS=',' read -r product queryType queryMetric queryName
	do
	  if [ -e test ]
	    then
	      rm test
	  fi
	  if [ -e /var/mon/circular-db/$queryName ] ; then
	      ./cdb-diagnose "/var/mon/circular-db/$queryName" < ans.txt > /dev/null
              if [ "${OPT}" = "-day" ] ; then
                 for I in $DAYS ; do 
                     grep "$Year-$Month-${I} 00:" test > /dev/null
                     if [ $? = "0" ] ; then
	             echo -n "$product,$queryType,"
	             echo -n "$(basename $queryName),"
                     grep "$Year-$Month-${I} 00:" test | head -1 | awk -F'[ []' '{printf "%s,",$3}'
                     grep "$Year-$Month-${I} 00:" test | head -1 | awk '{printf "%2.2f\n",$4}'
                     fi
                 done 
                elif [ "${OPT}" = "-hour" ] ; then
                 for I in $DAYS ; do                
                   for J in $HOURS ; do 
                     grep "$Year-$Month-${I} ${J}:" test > /dev/null
                     if [ $? = "0" ] ; then
	             echo -n "$product,$queryType,"
	             echo -n "$(basename $queryName),"
                     grep "$Year-$Month-${I} ${J}:" test | head -1 | awk -F'[ [":"]' '{printf "%s,%s,",$3,$4}'
                     grep "$Year-$Month-${I} ${J}:" test | head -1 | awk '{printf "%2.2f\n",$4}'
                     fi
                   done 
                 done 
                elif [ "${OPT}" = "-month" ] ; then
                        grep "$Year-$Month-01 00:" test > /dev/null
                        RC=$?
                        if [ "$RC" = "0" ] ; then 
	                  if [ "$CTR" = "0" ] ; then
	                    HEADER="Service,Filesystem,Date,$queryMetric"
                          else
                            HEADER="$HEADER,$queryMetric"
                          fi
	                  if [ "$OqueryType" = "$queryType" ] ; then 
                            BUFFER="$BUFFER,`grep "$Year-$Month-01 00:" test | head -1 | awk '{printf "%2.2f\n",$4}'`"
                            echo $BUFFER > qmon.$PID.$CTR
                          else
                            CTR=`expr $CTR + 1`
	                  BUFFER="$product,$queryType,$(basename $queryName),"
                          #grep "$Year-$Month-01 00:" test | head -1 | awk -F'[ []' '{printf "%s,%2.2f\n",$3,$4}'
                          #grep "$Year-$Month-01 00:" test | head -1 | awk -F'[ []' '{printf "%s,",$3}'
                          BUFFER=`grep "$Year-$Month-01 00:" test | head -1 | awk '{printf "%2.2f\n",$4}'`
                          CTR=`expr $CTR + 1`
                            OqueryType=$queryType
                          fi
                          echo $HEADER > qmon.$PID.start
                        fi
                        #paste -d, $FILES
                        #rm $FILES
                else
	             echo "Invalid option.  Exiting..."
                     exit
              fi
	    else
	      echo "/var/mon/circular-db/$queryName Not found"
	  fi
	done 
}
if [ -e qmonflag ] ; then 
    rm qmonflag
fi
if [ $# = 4 ] ; then
	qmon
else
	echo "Usage $0 -day|-hour|-month MONTH YEAR INFILE"
fi
